package selenium;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Sarthi {
WebDriver driver;
	
	// Lanching the firefox browser
public void LaunchBrowser() {
	System.setProperty("webdriver.gecko.driver", "/home/nakul/selenium/geckodriver");
	driver = new FirefoxDriver();
	driver.get("https://sarathi.parivahan.gov.in/");
	
	}

	// Drop Down the option
public void DropDown() throws InterruptedException {
	WebDriverWait wait=new WebDriverWait(driver, 20);
//	Thread.sleep(10000);
//	Select statename = new Select(driver.findElement(By.name("stName")));
	Select statename = new Select (wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("stName"))));
    statename.selectByVisibleText("Delhi");
	
}
/*
public void verifylinks() throws InterruptedException {
	Thread.sleep(5000);
	List<WebElement> links=driver.findElements(By.tagName("a"));
	System.out.println("Total links are "+links.size());
	for(int i=0;i<links.size();i++)
	{
		
		WebElement ele= links.get(i);
		
		String url=ele.getAttribute("href");
		
		verifyLinkActive(url);
		
	}
	
}

public static void verifyLinkActive(String linkUrl) {
	// TODO Auto-generated method stub
	{
		try
		{
			URL url = new URL(linkUrl);
	           
	           HttpURLConnection httpURLConnect=(HttpURLConnection)url.openConnection();
	           
	           httpURLConnect.setConnectTimeout(3000);
	           
	           httpURLConnect.connect();
	           
	           if(httpURLConnect.getResponseCode()==200)
	           {
	               System.out.println(linkUrl+" - "+httpURLConnect.getResponseMessage());
	            }
	          if(httpURLConnect.getResponseCode()==HttpURLConnection.HTTP_NOT_FOUND)  
	           {
	               System.out.println(linkUrl+" - "+httpURLConnect.getResponseMessage() + " - "+ HttpURLConnection.HTTP_NOT_FOUND);
	            }
	        } catch (Exception e) {
		}
	}
	
}
*/

public void verifylinks() throws InterruptedException, IOException {
	Thread.sleep(10000);
	// get the list of all links and images
	List<WebElement> links=driver.findElements(By.tagName("a"));
	//List<WebElement> links=driver.findElements(By.tagName("img"));
	//links.addAll(driver.findElements(By.tagName("img")));
	
	System.out.println("Size of full links and images---->"+links.size());
	
	List<WebElement> activelinks = new ArrayList<WebElement>();
	
	// iterate links : exclude all the links/images doesn't have any href attribute
	for (int i=0; i<links.size();i++) {
		//System.out.println(links.get(i).getAttribute("href"));
		if(links.get(i).getAttribute("href") != null && (!links.get(i).getAttribute("href").contains("javascript"))) {
			activelinks.add(links.get(i));  
		}
	}
	
	//get the size of active links list
	System.out.println("Size of active links and images---->"+activelinks.size());
	
	// check the href url with httpconnection api
	for(int j=0;j<activelinks.size();j++) {
		HttpURLConnection connection = (HttpURLConnection) new URL(activelinks.get(j).getAttribute("href")).openConnection();
		connection.connect();
		String response = connection.getResponseMessage();
		connection.disconnect();
		System.out.println(activelinks.get(j).getAttribute("href")+"---->"+response);
		
	}
	}
	


public static void main(String[] args) throws InterruptedException, IOException {
	Sarthi obj = new Sarthi();
	obj.LaunchBrowser();
	obj.DropDown();
	obj.verifylinks();
	
	}
	
}
